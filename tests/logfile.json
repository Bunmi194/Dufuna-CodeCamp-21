{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-06T12:41:42.836Z",
    "end": "2022-04-06T12:44:42.965Z",
    "duration": 180129,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "2a7287c8-a61a-4a4e-823e-bcd3d0dd3c28",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1919b9da-8a22-4bad-869d-892a9234c808",
          "title": "Printing product price",
          "fullFile": "/home/asus/Desktop/Dufuna-CodeCamp-21/tests/product_price_printing/test.js",
          "file": "/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: setupWebdriver for \"test case: check product details\"",
              "fullTitle": "Printing product price \"before all\" hook: setupWebdriver for \"test case: check product details\"",
              "timedOut": true,
              "duration": 180104,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const file_url = `file://${file_path}`;\ndriver.get(file_url).then(done);",
              "err": {
                "message": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/asus/Desktop/Dufuna-CodeCamp-21/tests/product_price_printing/test.js)",
                "estack": "Error: Timeout of 180000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/asus/Desktop/Dufuna-CodeCamp-21/tests/product_price_printing/test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
                "diff": null
              },
              "uuid": "42f09bc9-1f9a-4337-96a8-3371523053dd",
              "parentUUID": "1919b9da-8a22-4bad-869d-892a9234c808",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Printing product price\"",
              "fullTitle": "Printing product price \"after all\" hook in \"Printing product price\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver.quit();",
              "err": {},
              "uuid": "c91027c2-05d8-4538-8f72-4bb5bee0f447",
              "parentUUID": "1919b9da-8a22-4bad-869d-892a9234c808",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test case: check product details",
              "fullTitle": "Printing product price test case: check product details",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"));\nconst text = await element.getText();\nassert.include(\n  text,\n  \"is sold for\",\n  \"Ensure you print out the value in the right format\"\n);",
              "err": {},
              "uuid": "b9fd7034-52f0-47ed-8c55-af77313d038e",
              "parentUUID": "1919b9da-8a22-4bad-869d-892a9234c808",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "test case: check three arrays are present",
              "fullTitle": "Printing product price test case: check three arrays are present",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const element = await driver.findElement(By.css(\"body\"));\nconst text = await element.getText();\nconst count = text.split(\"is sold for\").length - 1;\nassert.equal(count, 3, \"Ensure the array contains 3 objects\");",
              "err": {},
              "uuid": "828dffe8-1fff-4092-9c3f-c7da4ae3a90a",
              "parentUUID": "1919b9da-8a22-4bad-869d-892a9234c808",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b9fd7034-52f0-47ed-8c55-af77313d038e",
            "828dffe8-1fff-4092-9c3f-c7da4ae3a90a"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 180000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "logfile",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/home/asus/Desktop/Dufuna-CodeCamp-21/tests/product_price_printing/../..//tests/",
        "reportFilename": "logfile",
        "quiet": "true"
      },
      "version": "6.0.1"
    }
  }
}